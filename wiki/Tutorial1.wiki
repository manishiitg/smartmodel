#sidebar TOCArticles

#summary Defining a Model Class

= Introduction =

This tutorial will show how to define a Model Class and what all options are available.


== What is Model ==

Basic understanding of `<a href='http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller'>MVC</a>` is required to understand the concept of Model. Model is used to represent data, and in our case a Database Table. 

== The SmartModel Class Basic Implementation ==

The model class is used to represent a database table. 

Lets take an example of a database table for this tutorial

{{{
CREATE TABLE IF NOT EXISTS `users` (
  `id` bigint NOT NULL auto_increment,
  `username` varchar(255) NOT NULL,
  `usertype` integer unsigned NOT NULL,
  PRIMARY KEY  (`id`)
);
}}}

Now to represent this table using a SmartModel

{{{
class User extends SmartModel {
public $id;
public $username;
public $usertype;

public $_table = "users";
public $_fields = array('id','username','usertype');
}
}}}

All fields should be public.

`$_table` stores the name of table

`$_fields` tell the class Model that id, username, usertype are database columns.
This is required by the User class may have other public variable of its on, which are not part of the database table.

=== Additional Feature 1 ===

The User table has been changed slightly


{{{
CREATE TABLE IF NOT EXISTS `users` (
  `ID` bigint NOT NULL auto_increment,
  `USERNAME` varchar(255) NOT NULL,
  `usertype` integer unsigned NOT NULL,
  PRIMARY KEY  (`id`)
);
}}}

as you will notice the capatalized ID and USERNAME

so to represent this is a Model 

{{{
class User extends SmartModel {
public $id;
public $username;
public $usertype;

public $_table = "users";
public $_fields = array(
                 'id' => 'ID',
                 'username' => 'USERNAME',
                 'usertype' => '');
}
}}}

as you can see now fields is an associative array with 'variable name' => 'column name'