#summary Insert Function: saving a model to database

= The Insert Fuction OR SQL INSERT =

Here the test database table and model we had written in Tutorial1

{{{
CREATE TABLE IF NOT EXISTS `users` (
  `id` bigint NOT NULL auto_increment,
  `username` varchar(255) NOT NULL,
  `usertype` integer unsigned NOT NULL,
  PRIMARY KEY  (`id`)
);
}}}


{{{
class User extends SmartModel {
public $id;
public $username;
public $usertype;

public $_table = "users";
public $_fields = array('id','username','usertype');
}
}}}


The signature of function is 

{{{public function insert();}}}

This function returns the insert id of the row.

Now to save this model to database is very easy, no SQL queries are required

{{{
$userObj = new User();
$userObj->username = 'Test';
$userObj->usertype = 1;
$id = $userObj->insert();
}}}

*SQL Output* (SQLTracking is assumed to be true in all tutorials)

Query Exec: INSERT INTO `users`(`username`,`usertype`) VALUES ('Test','1')


As you can see, the model got saved in the database. No need to write any sql query.

{{{
$id = $userObj->insert();
}}}

$id contains the inserted id of the row.


= The Update Function OR SQL UPDATE =

The signature of function is 
{{{
public function update();
}}}

Update function has three parameters 

{{{
update($set,$where,$opt)
}}}

{{{
1) $set :- is used to specify parameters for update command in SET
}}}

*Example*
{{{
$userobj=new User();
$userobj->sql_tracking=true;
$set=array("username"=>"paras");
$where = array("username"=>"sanchit");
}}}

$userobj->update($set,$where);

*SQL Output*

Query Exec: UPDATE `users` SET users.`username`= 'paras' WHERE users.`username`='sanchit'


2) $where :- is used to specify the parameters for search

*Example*
{{{
$userobj=new User();
$userobj->sql_tracking=true;
$userobj->username="paras";
$where = array("username"=>"sanchit");
}}}

$userobj->update(null,$where);

*SQL Output* 
Query Exec: UPDATE `users` SET users.`username`='paras' WHERE users.`username` = 'sanchit'


*Note:* 
The third statement of code $userobj->username="paras" is the set statement
for Update command

{{{
3) $opt:- Is similar to Smartread function $opt 
}}}

It only supports limit 
To use LIMIT:- *Example*

*Syntax for using limit*
{{{
$opt['limit]=('0,1');
}}}

*Code*

{{{
$set=array("username"=>"paras");
$where = array("username"=>"sanchit");
$opt['limit']=('0,1');
$userobj->update($set,$where,$opt);
}}}

*SQL Output*

Query Exec: UPDATE `users` SET users.`username`= 'paras' WHERE users.`username` = 'sanchit' LIMIT 0,1

Limit is from 0 and FIRST RECORD( 1 )





















